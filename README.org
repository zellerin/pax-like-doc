#+options: toc:t
* doc                                                       :package:
Trivial documentation annotations helpers based on MGL-PAX system.

The primary difference from PAX is that org format is used for the backend.
The secondary is that this is much smaller.

** @ANNOTATE                                                :section:
MGL-PAX style documentation utilities.

The idea is that apart from package and code, the author defines
sections that verbally describes some block of functionality and lists
interface functions and variables. These are also by default exported,
see below.

The sections are defined by DEFINE-SECTION as a function and can be
jumped to using standard editor shortcut (=M-.=) from their names.

The place to jump from is the package definition. Standard
=cl:defpackage= is replaced with =defpackage= that expects section
names on the input, and passes exported functions from the
=define-section= to the CL version. Elisp function
`sly-edit-current-package' is provided to jump to the package
definition.

The documentation strings are expected to be more or less org mode
format. Using poporg-mode (and binding it to =C-"=) makes it easier both
to write and to read.

*** =DEFINE-SECTION=                                        :function:
Define a section for documentation. Section contains a documentation
string and list of objects in documented interface to the section.

The objects are exported as a side effect.

*** =DEFPACKAGE=                                            :function:
Defpackage replacement. The format is same as for `cl:defpackage' with two exceptions:
- It expects =:sections= option on the input, and stores its value as
  list of sections that document the package
- The =:export= option is not expected, and is replaced by the currently
  known list of already exported symbols from the package, if the
  package already existed, or left empty otherwise. The idea is that
  sections define what is exported.
All other parameters are passed to =cl:defpackage= as is..

** @EXPORT                                                  :section:
Export documentation to org mode. The structure is:
- package has sections (in org)
- sections refer to functions and other source items
- function has documentation

*Security note*: The text from docstrings is considered to be already
in org mode and inserted verbatim. This means that if you export
documentation from a package someone else wrote documentation, *and*
have unsafe org mode settings, *and* open output in the emacs, you may
get surprises.

*** =EXPORT-PKG-TO-ORG=                                     :function:
Export package documentation to a file.
Package documentation consists of:
- Package documentation string
- Sections referenced in the package :section definition
- Objects referenced in the section definition.

PACKAGE-NAME is used in text and as default for the file name.

** @INTERNAL                                                :section:
Entry points possible useful for debugging and maintenance.

*** =*PACKAGE-SECTIONS*=                                    :variable:
List of sections in a package. For the doc package it is set manually,
elsewhere it should be taken over from the defpackage.

This is used only for exporting.

*** =UPDATE-README=                                         :function:
Update readme file for the package. Intended to be run after
  sly-mrepl-sync, when both =*package*= and directory are synchronized.

